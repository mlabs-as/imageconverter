<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
   <properties>
      <title>ImageConverter</title>
      <author email="ar@mobiletech.no">Andreas Ryland</author>
   </properties>
   <body>
       <release version="1.3.7" description="Minor Release" date="07.07.2008">    
		       <action dev="Andreas Ryland" type="add">
				Added new method for retrieving both the image dimensions and fomrat at the same time. Also updated the get dimensions method to use the newer code
		       </action>
		  </release>
       <release version="1.3.6" description="Bugfix Release" date="21.04.2008">    
		       <action dev="Andreas Ryland" type="fix">
				Certain JPEG Images fail, the exception throwed by ImageIO as not an IOException so it wasnt caught by the JPEG Reader, changed so that it is now caught so the ImageConverter JPEGReader filter cleaning algorithm can continue and on its max setting it will clean those imges so that ImageIO reads them.
		       </action>
		  </release>
   		<release version="1.3.5" description="Bugfix Release" date="20.09.2007">    
		       <action dev="Andreas Ryland" type="fix">
					Error with calculate image dimension for cropped images.
		       </action>
		  </release>
   		<release version="1.3.4" description="Bugfix Release" date="29.06.2007">    
		       <action dev="Andreas Ryland" type="fix">
					More cleanup related to resource disposal.
		       </action>
		  </release>
	   <release version="1.3.3" description="Bugfix Release" date="29.06.2007">    
		       <action dev="Andreas Ryland" type="fix">
					Attempting to fix problems with resources not being properly disposed of in certain scenarios.
		       </action>
		  </release>
	    <release version="1.3.2" description="Bugfix Release" date="15.06.2007">    
		       <action dev="Andreas Ryland" type="add">
					Bugfix in calculateConverterImageDimension method
		       </action>
		  </release>
	   <release version="1.3.1" description="Minor change Release" date="15.06.2007">    
		       <action dev="Andreas Ryland" type="add">
					Updated calculateConvertedImageDimension methods to take rotation and ignoreHeight parameters into account.
		       </action>
		  </release>
   		<release version="1.3.0" description="Feature Release" date="13.06.2007">    
		       <action dev="Andreas Ryland" type="add">
					Added rotation capability with a different interface, free angle rotation is not possible. This fixes a bug in the previous rotation implementation that caused white lines in the images when rotated 90 or 270 degrees.
		       </action>
      		   <action dev="Andreas Ryland" type="add">
					Added an ignore height attribute in the ImageConverterParams, this can be used to tell the ImageConverter to set the height to whatever will achieve the set width within the aspect ratio constraints.
		       </action>
		  </release>
   		<release version="1.2.4" description="Bugfix Release" date="09.03.2007">    
	 	       <action dev="Andreas Ryland" type="fix">
	 				Fixed bug in overlay function where the image format of the overlay image could be mistaken and cause errors. 
	 	       </action>
	    </release>
	   <release version="1.2.3" description="Bugfix Release" date="09.03.2007">    
	 	       <action dev="Andreas Ryland" type="add">
	 				Added image overlay option, this allows for writing a second image on top of the provided image. Normally the overlay image would have transparency in it so that it becomes an overlay on top of the image.
	 	       </action>
	    </release>
      	<release version="1.2.2" description="Bugfix Release" date="13.02.2007">    
 	       <action dev="Andreas Ryland" type="fix" issue="1088">
 				Added the option of disabling aspect ratio preservation through the imageConverterParams settings object. Disabling aspect ratio preservation means the new size will be exactly the requested size even if that means stretching the image.
 	       </action>
    </release>
   	<release version="1.2.1" description="General Release" date="30.01.2007">    
 	       <action dev="Andreas Ryland" type="add">
 				Added input variable validation for cropping parameters       
 	       </action>
 	       <action dev="Andreas Ryland" type="add">
 				Added overloaded getImageDimension function to allow the precalculation of resulting image size to take crop factors into account
 	       </action>
    </release>
  	<release version="1.2.0" description="General Release" date="29.01.2007">    
   	       <action dev="Andreas Ryland" type="add">
				Added image cropping. An image can be cropped from any of the 4 sides by a percentile of the image width/height. Image cropping is controlled via the ImageConverterParams object.
           </action>
           <action dev="Andreas Ryland" type="add">
				Enabled blurring for resizeing with a scale of 0.8 or less, for images with transparency and animated gifs. This was previously only available to other formats such as jpeg.
           </action>
           <action dev="Andreas Ryland" type="add">
				Animated gifs are now forced to have only 1, global, colortable as opposed to previous versions where animated gifs would get 1 local colortable per frame. This reduces image size.
           </action>
           <action dev="Andreas Ryland" type="add">
				Added progressive encoding by cropping for applicable animated gifs. Gifs that use resetToBackgroundColor as the frame reset method cannot be cropped, but all other animated gifs are. 
           </action>
           <action dev="Andreas Ryland" type="add">
				Added animated gif transparency optimization. This works by analysing frames and replacing pixels with transparent ones when the previous frame had a pixel of the same color. This can make a row of pixels that had all different colors into a row of pixels of the same, transparent color which helps the runtime encoding algorithm to create a smaller filesize for the gif.
           </action>
      </release>  
   	  <release version="1.1.2" description="General Release" date="22.11.2006">    
   	       <action dev="Andreas Ryland" type="add">
				Added a first version of image rotation, available as an ImageConverterParams setting
           </action>
           <action dev="Andreas Ryland" type="add">
				Added a method to use the ImageConverter to read a byte into a BufferedImage
           </action>
           <action dev="Andreas Ryland" type="fix" issue="954">
				The imageconverter will scan and crop the frames of animated gifs to create an optimal progressive encoding. This will be done on all images except those using reset to background color frame disposal method. 
           </action>
      </release>   
   	  <release version="1.1.1" description="General Release" date="22.11.2006">    
           <action dev="Andreas Ryland" type="fix" issue="954">
				Removed an erroneous cast of image metadata to PNGMetadata that caused the imageconveter to fail when conveting some formats, such as BMP.
           </action>
      </release>
      <release version="1.1.0" description="General Release" date="16.11.2006">    
           <action dev="Andreas Ryland" type="fix" issue="244">
				New image reader/writer structure means that for animated gifs, a maximum of 2 images will be held in memory at the same time, as opposed to (N = num frames) before. This will dramatically reduce the amount of memory used when converting animated gifs that have many frames.
           </action>
           <action dev="Andreas Ryland" type="fix" issue="599">
				Transparency in PNG images will now be preserved when converting PNG to PNG
           </action>           
           <action dev="Andreas Ryland" type="fix" issue="917">
				Transparent gifs will be processed and have any partial transparency converted to either transparent or non transparent pixels. Any transparent pixels with an alpha of less than 140 (out of 255) will be made transparent and will appear in the gif image as transparent.
           </action>      
           <action dev="Andreas Ryland" type="fix" issue="917">
				Gif transparency will be conserved when converting GIF to PNG.
           </action>       
           <action dev="Andreas Ryland" type="fix" issue="912">
				Animated gifs that do not have any transparency even though they have a transparent pixel set will now be blured when scaled down with a factor of 0.8 or smaller.
           </action>          
           <action dev="Andreas Ryland" type="fix" issue="911">
				Safety check and conversion to RGB or ARGB for images that are to be made grayscale, to prevent "Numbers of source Raster bands and source color space components do not match"
           </action>                           
      </release>    
      <release version="1.0.18" description="Bugfix Release" date="01.11.2006">    
           <action dev="Andreas Ryland" type="fix" issue="60">
              JPEG images with CMYK colors are now supported without the use of nativelibs.
           </action>
           <action dev="Andreas Ryland" type="fix" issue="638">
              JPEG images with CMYK colors are now supported without the use of nativelibs.
           </action>           
           <action dev="Andreas Ryland" type="fix" issue="869">
              LocalColorTables in animated gifs are now erased after reading the animation into memory, so they will not cause problems after we have computed a new globalcolortable for all frames to use.
           </action>      
           <action dev="Andreas Ryland" type="fix" issue="871">
              Single image GIF images now have a nullpointer safety against non-existing global colortables, and a fallback to localcolortable, if one exists.
           </action>                 
      </release>     
      <release version="1.0.17" description="Bugfix Release" date="10.09.2006">    
           <action dev="Andreas Ryland" type="fix" issue="707">
              Gifs to be converted to non gif images are now read with the gif reader method and not using the general image reader method. The extra calculations done by this method is not nescesary, but the conversion away from IndexColorModel prevents a bug.
           </action>
           <action dev="Andreas Ryland" type="add">
              Added new overloaded convertImage method that allows you to pass a preallocated Dimension object to the method to retrieve the dimensions of the resulting image without having to make a call to the getImageDimension method as well.
           </action>           
      </release>  
      <release version="1.0.16" description="Bugfix Release" date="18.08.2006">    
           <action dev="Andreas Ryland" type="fix" issue="669">
              Progressive animated gif code that was causing problems was removed.
           </action>
           <action dev="Andreas Ryland" type="add">
              ImageConverterParams can now write itself as XML data, for logging and testing purposes.
           </action>
      </release>  
      <release version="1.0.15" description="Bugfix Release" date="17.08.2006">    
           <action dev="Andreas Ryland" type="fix" issue="668">
              If one attempts to convert an image to wbmp, grayscale will be set to false if it was set to true. since a wbmp image can only by binary color. And this setting combination will trigger an exception.
           </action>
      </release>   
      <release version="1.0.14" description="Minor Enhancement Release" date="17.08.2006">    
           <action dev="Andreas Ryland" type="add">
               New method Dimension calculateConvertedImageDimension(int, int, int, int) added to provide information on how the resulting dimensions of an image without having to run it through the imageconverter
           </action>
      </release>   
      <release version="1.0.13" description="Bugfix Release" date="15.08.2006">    
           <action dev="Andreas Ryland" type="fix" issue="664">
               Banner was attempted scaled with a factor of 0, error in code, fixed. 
           </action>
      </release>
         <release version="1.0.12" description="Bugfix Release" date="15.08.2006">    
           <action dev="Andreas Ryland" type="fix" issue="663">
               Common for several jpeg crash bugs, before only one filter setting combination was used, now the imageconverter will try to cycle through different setting combinations to try to get the image working because it was learned that one setting cannot work for all faulty images.
           </action>
      </release>
      <release version="1.0.11" description="Bugfix Release" date="05.08.2006">    
           <action dev="Andreas Ryland" type="fix" issue="538">
               Reopened bug. Changing of the transparent color in a gif image when the transparent color is also present among the non transparent colors in order to successfully seperate them when converted to RGB colorspace is now applied to both animated and non animated gifs. This was previously only applied to animated gifs. 
           </action>
           <action dev="Andreas Ryland" type="fix" issue="569">
               The JPEG input filter no longer removes the APP_1 segment. 
           </action>
      </release>
   </body>
</document>
